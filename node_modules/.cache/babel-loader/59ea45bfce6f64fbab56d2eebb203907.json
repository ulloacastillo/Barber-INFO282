{"ast":null,"code":"var _jsxFileName = \"/Users/ulloacastillo/Desktop/Barber-INFO282/src/context/dates/dateState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport dateContext from \"./dateContext\";\nimport dateReducer from \"./dateReducer\";\nimport { GET_DATES, SET_MONTH, SET_DAY, DATE_BARBER, CURRENT_DATE } from \"../../types/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateState = props => {\n  _s();\n\n  const initialState = {\n    horas: [],\n    horasBarbero: [],\n    diaSeleccionado: new Date().getDate(),\n    mesSeleccionado: new Date().getMonth(),\n    idSeleccionado: null\n  };\n  const [state, dispatch] = useReducer(dateReducer, initialState);\n\n  const getDates = () => {\n    dispatch({\n      type: GET_DATES,\n      payload: horas\n    });\n  };\n\n  const setDay = day => {\n    dispatch({\n      type: SET_DAY,\n      payload: day\n    });\n  };\n\n  const setMonth = month => {\n    dispatch({\n      type: SET_MONTH,\n      payload: month\n    });\n  };\n\n  const getHorasBarbero = barberId => {\n    dispatch({\n      type: DATE_BARBER,\n      payload: barberId\n    });\n  };\n\n  const setCurrentDate = dateId => {\n    dispatch({\n      type: CURRENT_DATE,\n      payload: dateId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(dateContext.Provider, {\n    value: {\n      horas: state.horas,\n      horasBarbero: state.horasBarbero,\n      diaSeleccionado: state.diaSeleccionado,\n      mesSeleccionado: state.mesSeleccionado,\n      idSeleccionado: state.idSeleccionado,\n      getDates,\n      setDay,\n      setMonth,\n      getHorasBarbero,\n      setCurrentDate\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = DateState;\nexport default DateState;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateState\");","map":{"version":3,"sources":["/Users/ulloacastillo/Desktop/Barber-INFO282/src/context/dates/dateState.js"],"names":["React","useReducer","dateContext","dateReducer","GET_DATES","SET_MONTH","SET_DAY","DATE_BARBER","CURRENT_DATE","DateState","props","initialState","horas","horasBarbero","diaSeleccionado","Date","getDate","mesSeleccionado","getMonth","idSeleccionado","state","dispatch","getDates","type","payload","setDay","day","setMonth","month","getHorasBarbero","barberId","setCurrentDate","dateId","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,SADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,mBANP;;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,YAAY,EAAE,EAFK;AAGnBC,IAAAA,eAAe,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAHE;AAInBC,IAAAA,eAAe,EAAE,IAAIF,IAAJ,GAAWG,QAAX,EAJE;AAKnBC,IAAAA,cAAc,EAAE;AALG,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,WAAD,EAAcQ,YAAd,CAApC;;AAEA,QAAMW,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEnB,SAAR;AAAmBoB,MAAAA,OAAO,EAAEZ;AAA5B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMa,MAAM,GAAIC,GAAD,IAAS;AACtBL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEjB,OAAR;AAAiBkB,MAAAA,OAAO,EAAEE;AAA1B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BP,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAElB,SAAR;AAAmBmB,MAAAA,OAAO,EAAEI;AAA5B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,QAAD,IAAc;AACpCT,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,MAAAA,OAAO,EAAEM;AAA9B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AACjCX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf,YAAR;AAAsBgB,MAAAA,OAAO,EAAEQ;AAA/B,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,KAAK,EAAEQ,KAAK,CAACR,KADR;AAELC,MAAAA,YAAY,EAAEO,KAAK,CAACP,YAFf;AAGLC,MAAAA,eAAe,EAAEM,KAAK,CAACN,eAHlB;AAILG,MAAAA,eAAe,EAAEG,KAAK,CAACH,eAJlB;AAKLE,MAAAA,cAAc,EAAEC,KAAK,CAACD,cALjB;AAMLG,MAAAA,QANK;AAOLG,MAAAA,MAPK;AAQLE,MAAAA,QARK;AASLE,MAAAA,eATK;AAULE,MAAAA;AAVK,KADT;AAAA,cAcGrB,KAAK,CAACuB;AAdT;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjDD;;GAAMxB,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport dateContext from \"./dateContext\";\nimport dateReducer from \"./dateReducer\";\n\nimport {\n  GET_DATES,\n  SET_MONTH,\n  SET_DAY,\n  DATE_BARBER,\n  CURRENT_DATE,\n} from \"../../types/index\";\n\nconst DateState = (props) => {\n  const initialState = {\n    horas: [],\n    horasBarbero: [],\n    diaSeleccionado: new Date().getDate(),\n    mesSeleccionado: new Date().getMonth(),\n    idSeleccionado: null,\n  };\n\n  const [state, dispatch] = useReducer(dateReducer, initialState);\n\n  const getDates = () => {\n    dispatch({ type: GET_DATES, payload: horas });\n  };\n\n  const setDay = (day) => {\n    dispatch({ type: SET_DAY, payload: day });\n  };\n\n  const setMonth = (month) => {\n    dispatch({ type: SET_MONTH, payload: month });\n  };\n\n  const getHorasBarbero = (barberId) => {\n    dispatch({ type: DATE_BARBER, payload: barberId });\n  };\n\n  const setCurrentDate = (dateId) => {\n    dispatch({ type: CURRENT_DATE, payload: dateId });\n  };\n\n  return (\n    <dateContext.Provider\n      value={{\n        horas: state.horas,\n        horasBarbero: state.horasBarbero,\n        diaSeleccionado: state.diaSeleccionado,\n        mesSeleccionado: state.mesSeleccionado,\n        idSeleccionado: state.idSeleccionado,\n        getDates,\n        setDay,\n        setMonth,\n        getHorasBarbero,\n        setCurrentDate,\n      }}\n    >\n      {props.children}\n    </dateContext.Provider>\n  );\n};\n\nexport default DateState;\n"]},"metadata":{},"sourceType":"module"}