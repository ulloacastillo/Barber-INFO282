{"ast":null,"code":"var _jsxFileName = \"/Users/ulloacastillo/Desktop/Barber-INFO282/src/context/dates/dateState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport dateContext from \"./dateContext\";\nimport dateReducer from \"./dateReducer\";\nimport { GET_DATES, SET_MONTH, SET_DAY } from \"../../types/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateState = props => {\n  _s();\n\n  const horas = [{\n    idEstilista: 1,\n    dia: \"Lunes\",\n    horaInicial: 10,\n    disponible: true\n  }, {\n    idEstilista: 1,\n    dia: \"Lunes\",\n    horaInicial: 11,\n    disponible: true\n  }, {\n    idEstilista: 1,\n    dia: \"Lunes\",\n    horaInicial: 12,\n    disponible: false\n  }, {\n    idEstilista: 2,\n    dia: \"Martes\",\n    horaInicial: 9,\n    disponible: true\n  }, {\n    idEstilista: 3,\n    dia: \"Lunes\",\n    horaInicial: 10,\n    disponible: true\n  }];\n  const initialState = {\n    horas: [],\n    diaSeleccionado: null,\n    mesSeleccionado: null,\n    horaSeleccionada: null\n  };\n  const [state, dispatch] = useReducer(dateReducer, initialState);\n\n  const getDates = () => {\n    dispatch({\n      type: GET_DATES,\n      payload: horas\n    });\n  };\n\n  const setDay = day => {\n    dispatch({\n      type: SET_DAY,\n      payload: day\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(dateContext.Provider, {\n    value: {\n      horas: state.horas,\n      diaSeleccionado: state.diaSeleccionado,\n      mesSeleccionado: state.mesSeleccionado,\n      horaSeleccionada: state.horaSeleccionada,\n      getDates\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = DateState;\nexport default DateState;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateState\");","map":{"version":3,"sources":["/Users/ulloacastillo/Desktop/Barber-INFO282/src/context/dates/dateState.js"],"names":["React","useReducer","dateContext","dateReducer","GET_DATES","SET_MONTH","SET_DAY","DateState","props","horas","idEstilista","dia","horaInicial","disponible","initialState","diaSeleccionado","mesSeleccionado","horaSeleccionada","state","dispatch","getDates","type","payload","setDay","day","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,OAA/B,QAA8C,mBAA9C;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,OAAvB;AAAgCC,IAAAA,WAAW,EAAE,EAA7C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GADY,EAEZ;AAAEH,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,OAAvB;AAAgCC,IAAAA,WAAW,EAAE,EAA7C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAFY,EAGZ;AAAEH,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,OAAvB;AAAgCC,IAAAA,WAAW,EAAE,EAA7C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAHY,EAIZ;AAAEH,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,QAAvB;AAAiCC,IAAAA,WAAW,EAAE,CAA9C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAJY,EAKZ;AAAEH,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,OAAvB;AAAgCC,IAAAA,WAAW,EAAE,EAA7C;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GALY,CAAd;AAQA,QAAMC,YAAY,GAAG;AACnBL,IAAAA,KAAK,EAAE,EADY;AAEnBM,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,eAAe,EAAE,IAHE;AAInBC,IAAAA,gBAAgB,EAAE;AAJC,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEjB,SAAR;AAAmBkB,MAAAA,OAAO,EAAEb;AAA5B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMc,MAAM,GAAIC,GAAD,IAAS;AACtBL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf,OAAR;AAAiBgB,MAAAA,OAAO,EAAEE;AAA1B,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,KAAK,EAAES,KAAK,CAACT,KADR;AAELM,MAAAA,eAAe,EAAEG,KAAK,CAACH,eAFlB;AAGLC,MAAAA,eAAe,EAAEE,KAAK,CAACF,eAHlB;AAILC,MAAAA,gBAAgB,EAAEC,KAAK,CAACD,gBAJnB;AAKLG,MAAAA;AALK,KADT;AAAA,cASGZ,KAAK,CAACiB;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMlB,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport dateContext from \"./dateContext\";\nimport dateReducer from \"./dateReducer\";\n\nimport { GET_DATES, SET_MONTH, SET_DAY } from \"../../types/index\";\n\nconst DateState = (props) => {\n  const horas = [\n    { idEstilista: 1, dia: \"Lunes\", horaInicial: 10, disponible: true },\n    { idEstilista: 1, dia: \"Lunes\", horaInicial: 11, disponible: true },\n    { idEstilista: 1, dia: \"Lunes\", horaInicial: 12, disponible: false },\n    { idEstilista: 2, dia: \"Martes\", horaInicial: 9, disponible: true },\n    { idEstilista: 3, dia: \"Lunes\", horaInicial: 10, disponible: true },\n  ];\n\n  const initialState = {\n    horas: [],\n    diaSeleccionado: null,\n    mesSeleccionado: null,\n    horaSeleccionada: null,\n  };\n\n  const [state, dispatch] = useReducer(dateReducer, initialState);\n\n  const getDates = () => {\n    dispatch({ type: GET_DATES, payload: horas });\n  };\n\n  const setDay = (day) => {\n    dispatch({ type: SET_DAY, payload: day });\n  };\n\n  return (\n    <dateContext.Provider\n      value={{\n        horas: state.horas,\n        diaSeleccionado: state.diaSeleccionado,\n        mesSeleccionado: state.mesSeleccionado,\n        horaSeleccionada: state.horaSeleccionada,\n        getDates,\n      }}\n    >\n      {props.children}\n    </dateContext.Provider>\n  );\n};\n\nexport default DateState;\n"]},"metadata":{},"sourceType":"module"}